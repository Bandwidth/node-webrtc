/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import {
  PublishPermissionEnum,
  publishPermissionEnumSchema,
} from './publishPermissionEnum';
import { Subscriptions, subscriptionsSchema } from './subscriptions';

/** A participant object */
export interface Participant {
  /** Unique id of the participant */
  id?: string;
  /** Full callback url to use for notifications about this participant */
  callbackUrl?: string;
  /** Defines if this participant can publish audio or video */
  publishPermissions?: PublishPermissionEnum[];
  /**
   * List of session ids this participant is associated with
   * Capped to one
   */
  sessions?: string[];
  subscriptions?: Subscriptions;
  /** User defined tag to associate with the participant */
  tag?: string;
}

export const participantSchema: Schema<Participant> = object({
  id: ['id', optional(string())],
  callbackUrl: ['callbackUrl', optional(string())],
  publishPermissions: [
    'publishPermissions',
    optional(array(publishPermissionEnumSchema)),
  ],
  sessions: ['sessions', optional(array(string()))],
  subscriptions: ['subscriptions', optional(lazy(() => subscriptionsSchema))],
  tag: ['tag', optional(string())],
});
